% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parametric_eta.R
\name{parametric_eta}
\alias{parametric_eta}
\title{Parametric Eta calculation from ROC curves}
\usage{
parametric_eta(
  controls,
  cases,
  t0 = 1,
  box_cox = FALSE,
  mesh = seq(1e-05, 0.99999, length.out = 10000)
)
}
\arguments{
\item{controls}{A numeric vector of control group data (e.g., healthy individuals).}

\item{cases}{A numeric vector of case group data (e.g., individuals with a condition).}

\item{t0}{A numeric value indicating the cutoff point for integration. Only mesh points up to t0 are considered. Defaults to 1.}

\item{box_cox}{A logical value indicating whether to apply a Box-Cox transformation to the data before calculation. Defaults to \code{FALSE}.}

\item{mesh}{A numeric vector defining the mesh grid used for interpolation. Defaults to \code{seq(0.00001, 0.99999, length.out = 10000)}, which creates a fine grid.}
}
\value{
A numeric value representing the parametric Eta based on the ROC curves.
}
\description{
This function calculates the parametric Eta based on the ROC curves of the control and case datasets. Optionally, it can apply a Box-Cox transformation to the data before performing the calculations.
}
\details{
The function computes the parametric Eta by:
\enumerate{
\item Optionally applying a Box-Cox transformation to normalize the data
\item Calculating means and standard deviations of both groups
\item Computing the binormal ROC curve and its derivative
\item Passing these values to the \code{eta_from_roc_curves} function
}

The calculation assumes that the data (potentially after transformation) follows a normal distribution.
The ratio of standard deviations (ro) and standardized difference (delta) are key parameters in the computation.
}
\examples{
\dontrun{
# Generate sample data with moderate separation
controls <- rnorm(1000, mean = 0, sd = 1)
cases <- rnorm(1000, mean = 1, sd = 1)

# Calculate eta without transformation
eta <- parametric_eta(controls, cases)
print(eta)

# Calculate eta with Box-Cox transformation (useful for skewed data)
eta_boxcox <- parametric_eta(controls, cases, box_cox = TRUE)
print(eta_boxcox)

# Using a different cutoff point
eta_t0_0.8 <- parametric_eta(controls, cases, t0 = 0.8)
print(eta_t0_0.8)

# Using a coarser mesh for faster computation
coarse_mesh <- seq(0.001, 0.999, length.out = 1000)
eta_coarse <- parametric_eta(controls, cases, mesh = coarse_mesh)
print(eta_coarse)
}

}
\seealso{
\code{\link{eta_from_roc_curves}} for the underlying eta calculation,
\code{\link{apply_box_cox}} for details on the Box-Cox transformation
}

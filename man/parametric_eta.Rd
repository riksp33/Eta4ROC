% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parametric_eta.R
\name{parametric_eta}
\alias{parametric_eta}
\title{Parametric Eta calculation from ROC curves}
\usage{
parametric_eta(
  controls,
  cases,
  t0 = 1,
  box_cox = FALSE,
  mesh = seq(1e-05, 0.99999, length.out = 10000)
)
}
\arguments{
\item{controls}{A numeric vector of control group data (e.g., healthy individuals).}

\item{cases}{A numeric vector of case group data (e.g., individuals with a condition).}

\item{box_cox}{A logical value indicating whether to apply a Box-Cox transformation to the data before calculation. Defaults to \code{FALSE}.}

\item{mesh}{A numeric vector defining the mesh grid used for interpolation. Defaults to \code{seq(0.00001, 0.99999, length.out = 10000)}, which creates a fine grid.}
}
\value{
A numeric value representing the parametric Eta based on the ROC curves.
}
\description{
This function calculates the parametric Eta based on the ROC curves of the control and case datasets. Optionally, it can apply a Box-Cox transformation to the data before performing the calculations.
}
\details{
The function computes the parametric Eta by calculating the ROC and its derivative for both the control and case datasets. If the \code{box_cox} parameter is set to \code{TRUE}, a Box-Cox transformation is applied to the control and case data prior to the Eta calculation.
The Eta is derived using the relationship between the ROC curve and its derivative, which is then passed to the \code{eta_from_roc_curves} function.
}
\examples{
# Example usage without Box-Cox transformation
controls = rnorm(1000, mean = 0, sd = 1)
cases = rnorm(1000, mean = 1, sd = 1)
eta = parametric_eta(controls, cases)

# Example usage with Box-Cox transformation
eta_boxcox = parametric_eta(controls, cases, box_cox = TRUE)

}
